export default defineEventHandler(async (event) => {
    const config = useRuntimeConfig();
    const pathParam = event.context.params?.path;

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º path –≤ —Å—Ç—Ä–æ–∫—É (–µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ ‚Äî —Å–æ–µ–¥–∏–Ω—è–µ–º, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å)
    const path = Array.isArray(pathParam) ? pathParam.join('/') : pathParam || '';

    const query = getQuery(event);
    const targetUrl = `${config.public.API_URL}/${path}?${new URLSearchParams(query as any)}`;

    console.log("üîó –ó–∞–ø—Ä–æ—Å –∫ API:", targetUrl); // üëâ –õ–û–ì URL –∑–∞–ø—Ä–æ—Å–∞


    try {
        const response = await $fetch(targetUrl, {
            method: 'GET',
            headers: {
                'Authorization': getRequestHeader(event, 'Authorization') || '',
                'Content-Type': 'application/json'
            }
        });

        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç API:", response); // üëâ –õ–û–ì –æ—Ç–≤–µ—Ç–∞

        return response;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:", error);
    }
});
